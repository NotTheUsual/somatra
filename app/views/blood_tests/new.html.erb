<h1>New Blood Test</h1>
<%= form_for @blood_test, html: {class: 'main-content'} do |form| %>
  <%= form.label 'taken_on' %>
  <%= form.date_field :taken_on, required: true %>
  <p></p>
  <%= form.label :hb, 'Hb' %>
  <%= form.number_field :hb, step: 0.1 %>
  <p>(<%= BloodProbe::HEMOGLOBIN_UNIT %>)</p>
  <%= form.label :mcv, 'MCV' %>
  <%= form.number_field :mcv, step: 0.1 %>
  <p>(<%= BloodProbe::MEAN_CELL_VOLUME_UNIT %>)</p>
  <%= form.label :wbc, "WBC" %>
  <%= form.number_field :wbc, step: 0.1 %>
  <p><%= "(#{BloodProbe::WHITE_BLOOD_CELLS_UNIT})".html_safe %></p>
  <%= form.label :platelets, "Platelets" %>
  <%= form.number_field :platelets, step: 0.1 %>
  <p><%= "(#{BloodProbe::PLATELETS_UNIT})".html_safe %></p>
  <%= form.label :neutrophils, "Neutrophils" %>
  <%= form.number_field :neutrophils, step: 0.1 %>
  <p><%= "(#{BloodProbe::NEUTROPHILS_UNIT})".html_safe %></p>
  <%= form.label :lymphocytes, "Lymphocytes" %>
  <%= form.number_field :lymphocytes, step: 0.1 %>
  <p><%= "(#{BloodProbe::LYMPHOCYTES_UNIT})".html_safe %></p>
  <%= form.label :alt, 'ALT' %>
  <%= form.number_field :alt, step: 0.1 %>
  <p>(<%= BloodProbe::ALANINE_AMINOTRANSFERASE_UNIT %>)</p>
  <%= form.label :alk_phos, 'Alk Phos' %>
  <%= form.number_field :alk_phos, step: 0.1 %>
  <p>(<%= BloodProbe::ALKALINE_PHOSPHATASE_UNIT %>)</p>
  <%= form.label :creatinine, 'Creatinine' %>
  <%= form.number_field :creatinine, step: 0.1 %>
  <p>(<%= BloodProbe::CREATININE_UNIT %>)</p>
  <%= form.label :esr, 'ESR' %>
  <%= form.number_field :esr, step: 0.1 %>
  <p>(<%= BloodProbe::ERYTHROCYTE_SEDIMENTATION_RATE_UNIT %>)</p>
  <%= form.label :crp, 'CRP'  %>
  <%= form.text_field :crp %>
  <p>(<%= BloodProbe::C_REACTIVE_PROTEIN_UNIT %>)</p>

  <%= form.submit 'submit' %>
<% end %>

<div id="microphone"></div>
  <pre id="result"></pre>
  <div id="info"></div>
  <%= javascript_include_tag "microphone" %>

  <script>
    var mic = new Wit.Microphone(document.getElementById("microphone"));
    var info = function (msg) {
      document.getElementById("info").innerHTML = msg;
    };
    mic.onready = function () {
      info("Microphone is ready to record");
    };
    mic.onaudiostart = function () {
      info("Recording started");
    };
    mic.onaudioend = function () {
      info("Recording stopped, processing started");
    };
    mic.onerror = function (err) {
      info("Error: " + err);
    };
    mic.onresult = function (intent, entities) {
      var r = kv("intent", intent);

      for (var k in entities) {
        var e = entities[k];
        if (!(e instanceof Array)) {
          r += kv(k, e.value);
          console.log("here");
          console.log(e.value);
          if (window.times == undefined) {
            window.value = e.value;
            window.times = 'yeah';
          } else {
            var inpt = "#blood_test_" + window.value;
            console.log(inpt);
            $(inpt).val(e.value);
            window.times = undefined;
          }
        } else {
          for (var i = 0; i < e.length; i++) {
            r += kv(k, e[i].value);
          }
        }
      }
    };
    mic.connect('5ZVVUV3RFDOS7BYJUWYFOLU7EJLTVYHO');
    // mic.start();
    // mic.stop();

    function kv (k, v) {
      if (toString.call(v) !== "[object String]") {
        v = JSON.stringify(v);
        console.log(v);
      }
      console.log(k + "=" + v + "\n");
    }

  </script>
