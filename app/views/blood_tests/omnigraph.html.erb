<h1>The Omnigraph</h1>
<div class="omnigraph main-content"></div>

<script src="http://d3js.org/d3.v3.js"></script>
<script>

var dataset = <%= @blood_tests.parsed_response.to_json.html_safe %>;
console.log(dataset);

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y-%m-%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.result); });

var area = d3.svg.area()
    .x(function (d) {
    return x(d.date);
})
    .y0(function (d) {
    return y(30);
})
    .y1(function (d) {
    return y(70);
});

var svg = d3.select(".omnigraph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

function n(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "taken_on"; }));

  data.forEach(function(d) {
   d.date = parseDate(d.taken_on);
  });

  var tests = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, result: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(tests, function(c) { return 0; }),
    d3.max(tests, function(c) { return 100; })
  ]);

  svg.append("path")
    .datum(data)
    .attr("class", "safe")
    .attr("d", area);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end");

  var test = svg.selectAll(".test")
      .data(tests)
    .enter().append("g")
      .attr("class", "test");

  test.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); })
      .style("fill", "none")
      .style("stroke-width", 3);

  // var legend = svg.append("g")
  //   .attr("class", "legend")
  //       //.attr("x", w - 65)
  //       //.attr("y", 50)
  //   .attr("height", 100)
  //   .attr("width", 100)
  //   .attr('transform', 'translate(-20,50)')    
      
    
  //   legend.selectAll('rect')
  //     .data(dataset)
  //     .enter()
  //     .append("rect")
  //   .attr("x", width - 65)
  //     .attr("y", function(d, i){ return i *  20;})
  //   .attr("width", 10)
  //   .attr("height", 10)
  //   .style("fill", function(d) { 
  //       // var color = color_hash[dataset.indexOf(d)][1];
  //       return color(d.name);
  //     })
      
  //   legend.selectAll('text')
  //     .data(dataset)
  //     .enter()
  //     .append("text")
  //   .attr("x", width - 52)
  //     .attr("y", function(d, i){ return i *  20 + 9;})
  //   .text(function(d) {
  //       // var text = color_hash[dataset.indexOf(d)][0];
  //       return "hb";
  //     });

  test.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      // .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.result) + ")"; })
      .attr("x", width - 100)
      .attr("dy", ".35em")
      .attr("class", "hidden")
      .style("fill", function(d) { return color(d.name); })
      // .attr("y", 10)
      .text(function(d) { return d.name; });
}
                         
n([],dataset);

</script>
